diff --git a/core/lib/Drupal.php b/core/lib/Drupal.php
index e0b08670b7..2169b5691d 100644
--- a/core/lib/Drupal.php
+++ b/core/lib/Drupal.php
@@ -118,6 +118,44 @@ public static function unsetContainer() {
     static::$container = NULL;
   }
 
+  public static function formatBacktrace(array $backtrace) {
+    $return = '';
+
+    foreach ($backtrace as $trace) {
+      $call = ['function' => '', 'args' => []];
+
+      if (isset($trace['class'])) {
+        $call['function'] = $trace['class'] . $trace['type'] . $trace['function'];
+      }
+      elseif (isset($trace['function'])) {
+        $call['function'] = $trace['function'];
+      }
+      else {
+        $call['function'] = 'main';
+      }
+
+/*      if (isset($trace['args'])) {
+        foreach ($trace['args'] as $arg) {
+          if (is_scalar($arg)) {
+            $call['args'][] = is_string($arg) ? '\'' . $arg . '\'' : $arg;
+          }
+          else {
+            $call['args'][] = ucfirst(gettype($arg));
+          }
+        }
+      }*/
+
+      $line = '';
+      if (isset($trace['line'])) {
+        $line = " (Line: {$trace['line']})";
+      }
+
+      $return .= $call['function'] . '(' . /*implode(', ', $call['args']) .*/ ")$line\n";
+    }
+
+    return $return;
+  }
+
   /**
    * Returns the currently active global container.
    *
@@ -127,7 +165,7 @@ public static function unsetContainer() {
    */
   public static function getContainer() {
     if (static::$container === NULL) {
-      throw new ContainerNotInitializedException('\Drupal::$container is not initialized yet. \Drupal::setContainer() must be called with a real container.');
+      throw new ContainerNotInitializedException('\Drupal::$container is not initialized yet. \Drupal::setContainer() must be called with a real container.' . static::formatBacktrace(debug_backtrace()));
     }
     return static::$container;
   }
