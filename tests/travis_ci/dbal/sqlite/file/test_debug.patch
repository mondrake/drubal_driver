diff --git a/core/lib/Drupal/Core/Entity/Sql/SqlContentEntityStorage.php b/core/lib/Drupal/Core/Entity/Sql/SqlContentEntityStorage.php
index 275e539..40a4b0b 100644
--- a/core/lib/Drupal/Core/Entity/Sql/SqlContentEntityStorage.php
+++ b/core/lib/Drupal/Core/Entity/Sql/SqlContentEntityStorage.php
@@ -1597,6 +1597,9 @@ protected function readFieldItemsToPurge(FieldDefinitionInterface $field_definit
       }
     }
 
+    $item_query = NULL;
+    $entity_query = NULL;
+
     // Create field item objects and return.
     foreach ($items_by_entity as $revision_id => $values) {
       $entity_adapter = $entities[$revision_id]->getTypedData();
diff --git a/core/tests/Drupal/KernelTests/Core/Entity/EntityBundleFieldTest.php b/core/tests/Drupal/KernelTests/Core/Entity/EntityBundleFieldTest.php
index 22476d7..6e3e18b 100644
--- a/core/tests/Drupal/KernelTests/Core/Entity/EntityBundleFieldTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Entity/EntityBundleFieldTest.php
@@ -107,6 +107,7 @@ public function testCustomBundleFieldUsage() {
 
     // Purge field data, and check that the storage definition has been
     // completely removed once the data is purged.
+\Drupal::database()->getDbalExtension()->setDebugging(TRUE);
     field_purge_batch(10);
     $this->assertFalse($this->database->schema()->tableExists($table), 'Custom field table was deleted');
   }
