diff --git a/core/modules/field/tests/src/Kernel/BulkDeleteTest.php b/core/modules/field/tests/src/Kernel/BulkDeleteTest.php
index 900c154..a6717c7 100644
--- a/core/modules/field/tests/src/Kernel/BulkDeleteTest.php
+++ b/core/modules/field/tests/src/Kernel/BulkDeleteTest.php
@@ -215,6 +215,7 @@ public function testDeleteField() {
    * Tests that recreating a field with the name as a deleted field works.
    */
   public function testPurgeWithDeletedAndActiveField() {
+\Drupal::database()->getDbalExtension()->setDebugging(TRUE);
     $bundle = reset($this->bundles);
     // Create another field storage.
     $field_name = 'bf_3';
diff --git a/core/modules/field/tests/src/Kernel/FieldCrudTest.php b/core/modules/field/tests/src/Kernel/FieldCrudTest.php
index 08fe18c..63f4601 100644
--- a/core/modules/field/tests/src/Kernel/FieldCrudTest.php
+++ b/core/modules/field/tests/src/Kernel/FieldCrudTest.php
@@ -306,6 +306,7 @@ public function testDeleteField() {
    * Tests the cross deletion behavior between field storages and fields.
    */
   public function testDeleteFieldCrossDeletion() {
+\Drupal::database()->getDbalExtension()->setDebugging(TRUE);
     $field_definition_2 = $this->fieldDefinition;
     $field_definition_2['bundle'] .= '_another_bundle';
     entity_test_create_bundle($field_definition_2['bundle']);
diff --git a/core/modules/field/tests/src/Kernel/FieldStorageCrudTest.php b/core/modules/field/tests/src/Kernel/FieldStorageCrudTest.php
index f7993dc..34430ee 100644
--- a/core/modules/field/tests/src/Kernel/FieldStorageCrudTest.php
+++ b/core/modules/field/tests/src/Kernel/FieldStorageCrudTest.php
@@ -285,6 +285,7 @@ public function testIndexes() {
    * Test the deletion of a field storage.
    */
   public function testDelete() {
+\Drupal::database()->getDbalExtension()->setDebugging(TRUE);
     // TODO: Also test deletion of the data stored in the field ?
 
     // Create two fields (so we can test that only one is deleted).
